<krpano>
	<!-- videoplayer.xml 1.18 -->
	
	<plugin name="video_x" scale="1.0" scale.mobile="1.5"		url="../robertitor/x.png" keep="true" align="topright" edge="center" alpha="1" handcursor="true" enabled="true" preload="true"	visible="false" x="0" y="0" zorder="8" 		
		onclick="videoplayer_close();"/> 												
	
	
	<action name="videoplay">
		
		if(hotspots_settings.use_mp4_video_format_only EQ true,		
		set(video_file_name,'%SWFPATH%/videos/%1.mp4'); 
		,		
		set(video_file_name,'%SWFPATH%/videos/%1.mp4|%SWFPATH%/videos/%1.webm'); 
		);
		if(layer[videoplayer_bg],
			<!-- error -->
			trace('videoplayer_open - there is already a videoplayer!'-);
		  ,
			<!-- step one - add a background layer and fade it in -->
			addlayer(videoplayer_bg);
			set(layer[videoplayer_bg].type, container);
			
			set(layer[videoplayer_bg].zorder, 98);
			
			set(layer[videoplayer_bg].align, lefttop);
			set(layer[videoplayer_bg].width, 100%);
			set(layer[videoplayer_bg].height, 100%);
			set(layer[videoplayer_bg].bgcolor, 0x000000);
			set(layer[videoplayer_bg].bgalpha, 0.8);
			set(layer[videoplayer_bg].bgcapture, true);
			set(layer[videoplayer_bg].handcursor, false);
			set(layer[videoplayer_bg].alpha, 0.0);

			tween(layer[videoplayer_bg].alpha, 1.0, 0.5, default,
				<!-- step two - after the fade-in add the videoplayer plugin -->
				addlayer(videoplayer_plugin);
				set(layer[videoplayer_plugin].parent, layer[videoplayer_bg]);
				
				set(layer[videoplayer_plugin].align, center);
				set(layer[videoplayer_plugin].loop, false);
				set(layer[videoplayer_plugin].handcursor, false);
				set(layer[videoplayer_plugin].onvideocomplete, videoplayer_close());
				
				set(layer[videoplayer_plugin].onvideoplay, videointerface_update_playstate(); );
				set(layer[videoplayer_plugin].onvideopaused, videointerface_update_pausestate(); );
				
				set(layer[videoplayer_plugin].alpha, 0.0);
				set(layer[videoplayer_plugin].scale, 0.0);

				set(layer[videoplayer_plugin].onloaded,videoplayer_plugin_ready(get(video_file_name)); );
				
				set(layer[video_x].parent, layer[videoplayer_plugin]);				
				set(layer[video_x].visible, true);
				
				
				set(layer[videointerface_pp_image].parent, layer[videoplayer_plugin]);				
				set(layer[videointerface_pp_image].visible, true);
				
				if('%2' != null, set(layer[videoplayer_plugin].posterurl,'%2'); );
				if(device.flash,
					set(layer[videoplayer_plugin].url,'../plugins/videoplayer.swf');
				  ,
					set(layer[videoplayer_plugin].url,'../plugins/videoplayer.js');
				  );
			  );
		  );
	</action>

	<action name="videoplayer_plugin_ready">
		if(layer[videoplayer_plugin],			
			set(events[videoplayer_events].onresize, videoplayer_plugin_resize() );
			set(layer[videoplayer_plugin].pausedonstart, true);
			set(layer[videoplayer_plugin].onvideoready,
									
					videoplayer_plugin_resize();
					tween(scale,1,0.5,easeOutBack);
					tween(alpha,1,0.5,default, ifnot(device.ios, play() ) );
			   );
			layer[videoplayer_plugin].playvideo(%1);
			set_playing_video_now(true);
		  );
	</action>

	<action name="videoplayer_plugin_resize">
		<!-- use 90% width or height of available screen size -->
		div(aspect, layer[videoplayer_plugin].imagewidth, layer[videoplayer_plugin].imageheight);
		mul(new_videowidth, stagewidth, 0.90);
		div(new_videoheight, new_videowidth, aspect);
		mul(max_videoheight, stageheight, 0.90);
		if(new_videoheight GT max_videoheight,
			copy(new_videoheight, max_videoheight);
			mul(new_videowidth, new_videoheight, aspect);
		  );
		roundval(new_videowidth);
		roundval(new_videoheight);
		copy(layer[videoplayer_plugin].width, new_videowidth);
		copy(layer[videoplayer_plugin].height, new_videoheight);
	</action>

	<action name="videoplayer_close">
		set(layer[video_x].visible, false);
		set(layer[videointerface_pp_image].visible, false);
		
		set(events.[videoplayer_events].name, null);
		if(layer[videoplayer_plugin], layer[videoplayer_plugin].pause() );
		set(layer[videoplayer_bg].onclick, null);

		tween(layer[videoplayer_plugin].scale, 0.0, 0.5, easeInBack);
		tween(layer[videoplayer_bg].alpha, 0.0, 0.5, default,
			removelayer(videoplayer_plugin);
			removelayer(videoplayer_bg);
		  );
		
		set_playing_video_now(false);
		<!--set idle from start as when video started idle could be triggered but due to video playing no action taken (autotour not started)
		That mean when video start idle start from beggining-->
		if(autotour_settings.autotour_enabled EQ true AND autotour_definition.step.count GT 0, 				
				set(idletime,get(autotour_settings.idle_time));
		);
		<!--invalidatescreen needed to reset counter-->		
		invalidatescreen();
		
	</action>
		
	
	<!-- update the interface when the play/pause state has changed -->
		<style name="videointerface_pauseimage" url="videointerface_playpause.png" keep="true" />
			
		<layer name="videointerface_pp_image" zorder="99"
	       style="videointerface_pauseimage" 
	       crop="0|200|200|200" 
	       align="centerbottom"  visible="false" alpha="0.5" scale="0.5" y="20"
	       ondown="videointerface_togglepause();"
	       />

	<action name="videointerface_update_pausestate">		
			set(layer[videointerface_pp_image].crop, 0|200|200|200);
			if(plugin[get(videointerface_video)].iswaiting == false,
				set(layer[videointerface_pp_image].enabled, false);
				set(layer[videointerface_pp_image].visible, true);
				set(pause_scale, 1.0);
				if(device.mobile, set(pause_scale, 0.75));
				tween(layer[videointerface_pp_image].alpha, 1.0, 0.25, default);
				tween(layer[videointerface_pp_image].scale, get(pause_scale), 0.15, default);
				delayedcall(0.1, tween(layer[videointerface_pp_image].alpha, 0.0, 0.5, default, set(layer[videointerface_pp_image].visible,false); ); );
			  );
		  
	</action>
	
	<action name="videointerface_update_playstate">				  
			set(layer[videointerface_pp_image].crop, 0|0|200|200);						
			if(plugin[get(videointerface_video)].iswaiting == false,
				set(layer[videointerface_pp_image].visible, true);
				tween(layer[videointerface_pp_image].alpha, 1.0, 0.1, default,
					tween(layer[videointerface_pp_image].scale, 1.5, 0.40, default);
					tween(layer[videointerface_pp_image].alpha, 0.0, 0.25, default, set(layer[videointerface_pp_image].visible,false); );
				  );			  
			  );		  
	</action>
	
		<!-- toggle the play/pause state -->
	<action name="videointerface_togglepause">
		layer[videoplayer_plugin].togglepause();
	</action>

	<action name="set_playing_video_now">			
		set(playing_video_now,%1);				
	</action>	
	
</krpano>
